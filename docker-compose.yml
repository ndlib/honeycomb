# To start Solr and MySQL as background daemon: docker-compose up -d
# To also start up the rails app as background daemon: docker-compose -f docker-compose.yml -f docker-compose-rails.yml up -d
# Both of the above commands run from the root of the repository
version: '3.2'
services:
  postgres:
    image: postgres:9.5.4
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    # volumes:
    #   - ./docker/mysql-utf8.cnf:/etc/mysql/conf.d/mysql-utf8.cnf
    # healthcheck:
    #     interval: 30s
    #     timeout: 10s
    #     retries: 5
  rails:
    build:
      context: .
      dockerfile: docker/Dockerfile.rails
    command: bash docker/rails_entry.sh
    environment:
      RAILS_ENV: development
      DB_HOST: postgres
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      SOLR_URL: http://solr:8983/solr
      SOLR_HOST: solr
      SOLR_PORT: 8983
      # Need to pass the user running docker into the container so that
      # config/admin_usernames.yml pulls in the user as an admin. This is
      # to replicate existing behavior on OSX and may not work correctly on
      # another OS
      USER: #{USER}
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - solr
  solr:
    build:
      context: .
      dockerfile: docker/Dockerfile.solr
    ports:
      - "8983:8983"
    # command: ["solr", "start", "-p", "8983", "-s", "/var/solr", "-f"]
    command: 
      - solr-precreate
      - honeycomb